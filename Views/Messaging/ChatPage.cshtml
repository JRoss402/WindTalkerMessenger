<html>
<head>
	<!-- Import this CDN to use icons -->
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css" />
	<script src="https://code.jquery.com/jquery-3.6.0.min.js" /></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.13/signalr.min.js" /></script>
	<style>

		#maindiv {
			border: 3px solid black;
			height: 500px;
			width: auto;
			margin: auto;
			border-top-left-radius: 10px;
			border-top-right-radius: 10px;
		}

		#chatList {
			list-style-type: none;
			padding-left: 0px;
		}

		#leftinnerdiv {
			float: left;
			height: 495px;
			width: 75%;
			overflow-y: auto;
			background-color: black;
			opacity: 95%;
			border-radius: 15px 0px 0px 15px;
			color: #2E801B;
			//border-style: solid;
			border-width: 1px;
			border-right-style:solid;
		}

		button {
			border-radius: 5px;
			width: 100%;
		}

		#rightinnerdiv {
			float: left;
			height: 520px;
			width: 32%;
			overflow-y: auto;
		}

		#li {
			display: inline-block;
			width: 100%;
		}

		#username {
			height: 50px;
			font-size: 20px;
			margin-top: 20px;
			margin-bottom: 50px;
			text-align: center;
			background-color: black;
			opacity: 95%;
			color: green;
			border-color: green;
		}

		body {
			background-image: url('../banner.jpg');
			background-repeat: no-repeat;
			background-attachment: fixed;
			background-size: 100% 100%;
		}


		#chatsAside {
			background-color: black;
			border-radius: 0px 15px 15px 0px;
			color: #7ACC00;
			border-style: solid;
			border-width: 1px;
			border-left-width: 0px;
			opacity: 95%;
			float: right;
			height: 495px;
			width: 25%;
			justify-content: flex-start;
			display: flex;
			flex-direction: column;
			overflow-y: auto;
		}
		#userHeading {
			color: #2E801B;
			font-size: 60px;
			font-weight: bold;
			text-align: center;
		}

		#message {
			height: 50px;
			font-size: 20px;
			margin-top: 10px;
			margin-bottom: 20px;
			text-align: center;
			background-color: black;
			opacity: 90%;
			color: #7ACC00;
			border-color: green;
			width:1150px;
			border-right-color: black;
			width:1210px;
		}

		.messageLoad {
			color: #7ACC00;
		}

		#sendButton {
			margin-top: 10px;
			height: 50px;
			width: 125px;
			background-color: black;
			color: #7ACC00;
			font-weight: bold;
			border-left-color: black;
			margin-left: 0px;
		}
		#messageContainer {
			display: inline-flex;

		}

		#maindiv {
			border-style: none;
		}
		
		#nameButton{
			background-color:black;
			border-color: green;
			border-width: 1px;
			height: 50px;
			color: #7ACC00;
			font-size: 20px;
			font-weight: bold;
		}
		#nameButton:hover{
			background-color: darkgreen;
			opacity: 95%;
		}

		//https://www.w3schools.com/howto/howto_css_custom_scrollbar.asp
		::-webkit-scrollbar {
			width: 10px;
		}

		::-webkit-scrollbar-track {
			background: black;
		}

		::-webkit-scrollbar-thumb {
			background: green;
		}

		::-webkit-scrollbar-thumb:hover {
				background: #7ACC00;
		}


	</style>
</head>

<body>
	<!--<p id="userHeading">Wind Talker</p>-->
	<div class="chatPageContainer">
		<div>
		</div>
		<div id="chat-page">
			<div id="maindiv">
				<div id="reversal">
				<ul id="leftinnerdiv">
				</ul>
				</div>
				<div id="chatsAside">
					<input type="text" id="username" class="username" placeholder="Username" />
					<ul id="chatList">
						<!--<button id="getChats" name="getChats">myname</button>-->
					</ul>
				</div>
			</div>
			<div class="msg-bottom" id="messageContainer">
				<div class="input-group">
					<input type="text"
						   id="message"
						   class="form-control"
						   placeholder="Write message..." />
				</div>
				<button id="sendButton"class="sendButton">Transmit</button>
			</div>
		</div>
	</div>

	<script>
		//https://vmar76.medium.com/using-async-await-when-chaining-fetch-requests-in-javascript-5b75a75ff8e0
		async function GetMessages(event, name) {
			$("#leftinnerdiv").empty();
			if (name == null) {
				var target = $(event.target);
				var chatName = target.attr("name-arg");
				$("#username").val(chatName);
			} else {
				var chatName = name;
			}


			const requestName = "../API/GetChatName";

			fetch(requestName, {
				method: 'POST',
				headers: {
					'Accept': 'application/json; charset=utf-8',
					'Content-Type': 'application/json;charset=UTF-8'
				}
			})
				.then(response => response.json())
				.then(json => storeChatName(json))

			const storeChatName = (json) => {
				localStorage.setItem('UserChatName', json.toString());

			}
			const requestMessages = `../API/GetReceivedMessages/${chatName}`;

			await fetch(requestMessages, {
				method: 'POST',
				body: JSON.stringify({ ChatName: chatName }),
				headers: {
					'Accept': 'application/json; charset=utf-8',
					'Content-Type': 'application/json;charset=UTF-8'
				}
			})
				.then(response => response.json())
				.then(response => response.forEach(getChats))



			const queuesRequest = `../API/GetSenderQueues/${chatName}`;
			await fetch(queuesRequest, {
				method: 'POST',
				body: JSON.stringify({ ChatName: chatName }),
				headers: {
					'Accept': 'application/json; charset=utf-8',
					'Content-Type': 'application/json;charset=UTF-8'
				}
			})
				//https://stackoverflow.com/questions/18614301/keep-overflow-div-scrolled-to-bottom-unless-user-scrolls-up
				.then(response => response.json())
				.then(response => response.forEach(postQueuedChats))
				.then(response => {
					setTimeout(() => { scrollBottom(); }, 0);
				})
			function scrollBottom() {
				const chatContainer = document.getElementById("leftinnerdiv");
				chatContainer.scrollTop = chatContainer.scrollHeight;
			}
		}

		function postQueuedChats(item, index, arr) {
			let chatPostName = $("<div />").text(item.senderChatName).html();
			let sendName = item.senderChatName;
			let message = $("<div />").text(item.userMessage).html();
			let timeStamp = $("<div />").text(item.MessageDate).html();
			let storedChatName = localStorage.getItem('UserChatName');
			if (sendName !== storedChatName) {
				$("#leftinnerdiv").append("<li><strong>" + chatPostName + " (Message Queued) </strong>: " + message + "</li>");
			}
			else {
				$("#leftinnerdiv").append('<li><strong>You (Message Queued)</strong>:<span class="messageLoad">' + message + "</span></li>");
			}
		};

		function getChats(item, index, arr) {
			let chatPostName = $("<div />").text(item.senderChatName).html();
			let sendName = item.senderChatName;
			let message = $("<div />").text(item.userMessage).html();
			let timeStamp = $("<div />").text(item.MessageDate).html();
			let storedChatName = localStorage.getItem('UserChatName');
			if (sendName !== storedChatName) {
				$("#leftinnerdiv").append('<li><strong>' + chatPostName + '</strong>: <span class="messageLoad">' + message + "</span></li>");

			}
			else {
				$("#leftinnerdiv").append('<li><strong>You</strong>: <span class="messageLoad">' + message + "</span></li>");
			}
		};


		//https://learn.microsoft.com/en-us/aspnet/core/signalr/hubs?view=aspnetcore-8.0
		//https://www.roundthecode.com/dotnet-tutorials/add-signalr-hub-aspnet-core-connect-using-javascript

		var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
		connection.on("ReceiveMessage", function (user, message) {
			var encodedUser = $("<div />").text(user).html();
			var encodedMsg = $("<div />").text(message).html();
			console.log("Message received from: ", encodedUser, "Message: ", encodedMsg);
			$("#leftinnerdiv").append("<li><strong>" + encodedUser + '</strong>:<span class="messageLoad">' + encodedMsg + "</span> < /li>");
		});


		//add the (Queued Message) styling.
		connection.on("MessageQueued", async function (receiver, message) {
			var encodedUser = $("<div />").text(receiver).html();
			console.log(encodedUser, " is offline.Your message has been queued until they return.");
			let name = localStorage.getItem('UserChatName');
			$("#leftinnerdiv").append("<li><strong>" + encodedUser + "</strong> has gone dark. They are currently on a mission-critical assignment and will return after completion.</li>");

		});

		connection.on("GuestGone", function (user) {
			var encodedUser = $("<div />").text(user).html();

			console.log(encodedUser, " was a guest and have disconnected.");

			$("#leftinnerdiv").append("<li><strong>" + encodedUser + "</strong> has gone rogue and removed their fingerprint from this site.</li>");
		});

		connection.on("PrintQueuedMessages", function (messages) {
			messages.forEach(printMsgs)
			function printMsgs(item, index, arr) {
				let chatName = $("<div />").text(item.senderChatName).html();
				let message = $("<div />").text(item.userMessage).html();
				$("#leftinnerdiv").append("<li><strong>" + chatName + "</strong>: " + message + "</li>");
			}
		});
		connection.on("ServerDisconnect", function (user) {
			var encodedUser = $("<div />").text(user).html();
			console.log("User: ", encodedUser, " disconnected.The server timed out");

			$("#leftinnerdiv").append("<li><strong>Server Response Timed Out. You have been disconnected.</strong></li>");
		});

		$("#sendButton").click(async function () {
			let names = [];
			let nameList = [];
			var username = "";
			if (!username) {
				username = $("#username").val();
			}
			var message = $("#message").val();
			if (username && message) {
				namesList = await fetchChatNameList();
				console.log(namesList);
				if (namesList.includes(username) == false) {
					$("#chatList").append('<button id="nameButton" class="btn btn-primary" onclick="GetMessages(event)" name-arg="' + username + '">' + username + "</button>");
				}
				await GetMessages(event, username)
				username = $("#username").val();
				var encodedMsg = $("<div />").text(message).html();
				$("#leftinnerdiv").append('<li><strong>You</strong>: <span class="messageLoad"> ' + encodedMsg + "</span></li>");
				connection.invoke("SendMessage", username, message)
					.catch(function (err) {
						return console.error(err.toString());
					});
				$("#message").val("").focus();
			} else if (!username) {
				alert("Please enter your username!");
			}
		})
		//https://stackoverflow.com/questions/45018338/javascript-fetch-api-how-to-save-output-to-variable-as-an-object-not-the-prom
			
		async function fetchChatNameList() {
				const request = '../API/GetUserChatList';
				const response = await fetch(request, {
					method: 'POST',
					headers: {
						'Accept': 'application/json; charset=utf-8',
						'Content-Type': 'application/json;charset=UTF-8'
					}
				})
				return await response.json();

			}
			//})

		//https://stackoverflow.com/questions/9643311/pass-a-string-parameter-in-an-onclick-function
		//https://stackoverflow.com/questions/1276870/how-to-pass-an-event-object-to-a-function-in-javascript
		//https://stackoverflow.com/questions/39144210/pass-a-variable-to-foreach-function

		//==============Connection Start===================//

		connection.start().then(function () {
			console.log("Connected!");
			const request = '../API/GetUserChatList';
			fetch(request, {
				method: 'POST',
				headers: {
					'Accept': 'application/json; charset=utf-8',
					'Content-Type': 'application/json;charset=UTF-8'
				}
			})
				.then(response => response.json())
				.then(json => json.forEach(getUserChats))
				.catch(error => caughtErrors(error))
		});

		//https://stackoverflow.com/questions/9643311/pass-a-string-parameter-in-an-onclick-function
		//https://stackoverflow.com/questions/1276870/how-to-pass-an-event-object-to-a-function-in-javascript
		//https://stackoverflow.com/questions/39144210/pass-a-variable-to-foreach-function


		function getUserChats(item, index, arr) {
			let name = item;
			$("#chatList").append('<button id="nameButton" class="btn btn-primary" onclick="GetMessages(event)" name-arg="' + name + '">' + name + "</button>");

		}

	</script>
</body>
</html>

